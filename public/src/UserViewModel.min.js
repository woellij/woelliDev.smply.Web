UserViewModel=function(){var n={username:"",isLoggedIn:ko.observable(!1),isLoggingIn:ko.observable(!1),registerCommand:function(){Navigation.navigateTo("register")},logoutCommand:function(){Ting.User.logout()},loginCommand:function(){Navigation.navigateTo("login")},boardSelected:function(t,i){console.log("BoardsViewModel selected board",t);Navigation.navigateTo(n.username+"/"+t.name,{board:t});i.stopPropagation()},createBoardCommand:function(n,t){var i=$(t.currentTarget).parents(".f-dropdown");i.removeClass("open");i.hide();Navigation.navigateTo("createBoard")},boardsViewModel:ko.observable()},t=function(){$(Ting.User).on("loggedin",function(n,t){console.log("LOGIN EVENT",n,t);r(t)});$(Ting.User).on("loggedout",i);$(Navigation).on("navigated",function(t,i){n.isLoggingIn(i=="register"||i=="login")});return Ting.User.loginStored(),n},i=function(){console.log("onlogout");n.isLoggedIn(!1)},r=function(t){n.isLoggingIn(!1);n.isLoggedIn(t.success);t.success&&(u(t.user),$("#navigation-div").css("padding-top","0px"));console.log("userviewmodel onlogin",ko.toJS(n),t)},u=function(t){Presenter.ViewModelLoader.load("boards",function(i){i.init({userID:t.id});n.boardsViewModel(i);n.username=t.name;console.log()})};return n.init=t,n}();
/*
//# sourceMappingURL=UserViewModel.min.js.map
*/